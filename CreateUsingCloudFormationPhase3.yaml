AWSTemplateFormatVersion: '2010-09-09'
Description: Phase 3 - EC2 Flask App + MySQL + Cognito User Pool

Resources:

  # === Existing Resources (copied from Phase 2) ===

  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: ReceiptsVPC

  MySubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [ 0, !GetAZs ]
      Tags:
        - Key: Name
          Value: ReceiptsSubnet

  MyInternetGateway:
    Type: AWS::EC2::InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref MyInternetGateway

  MyRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC

  MyRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref MyRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MyInternetGateway

  MySubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MySubnet
      RouteTableId: !Ref MyRouteTable

  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP and SSH
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0

  MyKeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: ReceiptsKeyPair

  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.micro
      KeyName: !Ref MyKeyPair
      SubnetId: !Ref MySubnet
      SecurityGroupIds:
        - !Ref MySecurityGroup
      ImageId: ami-03a6eaae9938c858c  # Example Amazon Linux 2 AMI ID (adjust as needed)
      Tags:
        - Key: Name
          Value: ReceiptsAppInstance
      UserData:
        Fn::Base64: |
          #!/bin/bash
          yum update -y
          yum install python3 -y
          pip3 install flask
          echo "from flask import Flask
          app = Flask(__name__)
          @app.route('/')
          def hello():
              return 'Receipts App Running'
          if __name__ == '__main__':
              app.run(host='0.0.0.0', port=8080)" > /home/ec2-user/app.py
          python3 /home/ec2-user/app.py &

  # === ðŸ†• NEW: Cognito User Pool ===

  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: ReceiptsUserPool
      AutoVerifiedAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireUppercase: true
          RequireNumbers: true
          RequireSymbols: false

# === Outputs ===

Outputs:
  EC2InstancePublicDNS:
    Description: Public DNS of the EC2 Instance
    Value: !GetAtt MyEC2Instance.PublicDnsName

  UserPoolId:
    Description: ID of the Cognito User Pool
    Value: !Ref CognitoUserPool
