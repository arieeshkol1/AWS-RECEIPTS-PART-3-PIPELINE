AWSTemplateFormatVersion: '2010-09-09'
Description: EC2 Instance with Flask App and MySQL using UserData (Free Tier)
Resources:
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH and HTTP from anywhere
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-0c02fb55956c7d316
      KeyName: ReceiptsEC2
      SecurityGroupIds:
        - !Ref EC2SecurityGroup
      Tags:
        - Key: Name
          Value: IAC-Receipts-EC2
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y python3 git mysql-server
          pip3 install flask pymysql
          #Text#
          systemctl enable mysqld
          systemctl start mysqld

          sleep 10

          mysql -u root <<EOF
          CREATE DATABASE IF NOT EXISTS recipes_db;
          USE recipes_db;
          CREATE TABLE IF NOT EXISTS recipe_images (
            id INT AUTO_INCREMENT PRIMARY KEY,
            filename VARCHAR(255) NOT NULL,
            title VARCHAR(255),
            upload_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
          );
          EOF

          mkdir -p /home/ec2-user/recipes-site/static/uploads
          mkdir -p /home/ec2-user/recipes-site/templates

          cat <<EOF > /home/ec2-user/recipes-site/app.py
          from flask import Flask, request, render_template, redirect, url_for
          import os
          from werkzeug.utils import secure_filename

          app = Flask(__name__)
          app.config['UPLOAD_FOLDER'] = 'static/uploads'
          app.config['MAX_CONTENT_LENGTH'] = 16 * 1024 * 1024
          ALLOWED_EXTENSIONS = {'png', 'jpg', 'jpeg', 'gif'}

          def allowed_file(filename):
              return '.' in filename and \
                     filename.rsplit('.', 1)[1].lower() in ALLOWED_EXTENSIONS

          @app.route('/', methods=['GET', 'POST'])
          def index():
              if request.method == 'POST':
                  if 'file' not in request.files:
                      return 'No file part'
                  file = request.files['file']
                  if file.filename == '':
                      return 'No selected file'
                  if file and allowed_file(file.filename):
                      filename = secure_filename(file.filename)
                      filepath = os.path.join(app.config['UPLOAD_FOLDER'], filename)
                      file.save(filepath)
                      return redirect(url_for('uploaded_file', filename=filename))
              return render_template('index.html')

          @app.route('/uploads/<filename>')
          def uploaded_file(filename):
              return f"""
              <h2>Upload successful!</h2>
              <img src='/static/uploads/{filename}' width='300'>
              <br><br><a href="/">Upload another</a>
              """

          if __name__ == '__main__':
              app.run(host='0.0.0.0', port=8080)
          EOF

          cat <<EOF > /home/ec2-user/recipes-site/templates/index.html
          <!doctype html>
          <html>
          <head><title>Upload Recipe Image</title></head>
          <body>
            <h1>Upload a Recipe Photo</h1>
            <form method=post enctype=multipart/form-data>
              <input type=file name=file>
              <input type=submit value=Upload>
            </form>
          </body>
          </html>
          EOF

          cd /home/ec2-user/recipes-site
          FLASK_APP=app.py nohup flask run --host=0.0.0.0 --port=8080 &
